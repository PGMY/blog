<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: iOS | PGMY Programming Blog]]></title>
  <link href="http://pgmy.github.io/blog/tags/ios/atom.xml" rel="self"/>
  <link href="http://pgmy.github.io/blog/"/>
  <updated>2018-01-30T07:51:29+00:00</updated>
  <id>http://pgmy.github.io/blog/</id>
  <author>
    <name><![CDATA[PGMY]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[macOS10.12 SierraにアップデートしたらうちのJenkins執事ちゃんがストライキを起こしてしまったメモ]]></title>
    <link href="http://pgmy.github.io/blog/2016/10/03/jenkins-macos10-dot-12-sierra/"/>
    <updated>2016-10-03T07:11:35+00:00</updated>
    <id>http://pgmy.github.io/blog/2016/10/03/jenkins-macos10-dot-12-sierra</id>
    <content type="html"><![CDATA[<p>Macをアップデートしたらうちの大事な執事ちゃんがストライキを起こしたのでなだめる方法をめもめも。<br/>
正直原因が多岐に渡っていたので、実は必要なかった設定とかがあるかもしれない…</p>

<p>余計な処理とか推奨されない対応してるとかあったら教えてください偉い人Σ・ω・｀</p>

<p>XcodeBuilderを利用させるために四苦八苦したメモです。
brewとrubyは既にmacOS10.12に対応させるためごにょごにょしてあります。</p>

<!-- more -->


<a name="L...............Jenkins......................................."></a>
<h2>とりあえずJenkinsが真っ白になってしまった…</h2>

<p>OSをアップデートしてから起動画面を見に行くと画面が真っ白に…
CSS等が読み込まれずに文字だけの表示というのは経験があったんだけども、画面全体が真っ白で何も映らない。<br/>
接続エラーの画面ではないのでJenkins自体はちゃんと起動している様子。
Chromeで確認すると413エラーが帰ってきていたのでそのあたりで検索かけたら見つけましたほんっとうにありがとうございます！！！！！！</p>

<p>⇒<a href="http://orca8.blogspot.jp/2014/08/jenkinsfull-head-413.html">JenkinsでFULL head 413を返すとき</a></p>

<p>とりあえずクッキーを消せばどうにかなる！
ということなので、個別にCookieを編集・削除できるExtention <a href="https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg?hl=ja">EditThisCookie</a> を導入しました・ω・これ、便利。<br/>
ざざっとJenkinsページのCookieをまるまる削除したら画面が表示されるようになりましたわーい♪♪</p>

<a name="NullPointer.............."></a>
<h2>NullPointer??なエラー</h2>

<p>画面が表示されるようになったのでさっそくXcodeBuildを試してみる…</p>

<pre><code>ERROR: Build step failed with exception java.lang.NullPointerException at au.com.rayh.XCodeBuilder.perform
</code></pre>

<p>上記とともにざざざっとスタックトレースが表示されているんだけども…どうやらRubyまわりの問題みたい。
実はSierraにアップデートしてからrubyの管理をrbenvで管理するように変更したのだけれども、こちらに対応させる必要があった様子。
<a href="http://qiita.com/kitaro_tn/items/22fd3830ba9a85ad5320">Jenkinsでrubyのビルドでハマった点</a>で設定方法が解説されてたのでこの通りにしました。</p>

<a name="resource-rules..deprecated.in.Mac.OS.X....10.10..............."></a>
<h2>resource-rules (deprecated in Mac OS X >= 10.10)! なエラー</h2>

<p>どうやら<code>--resource-rules</code>オプションがdeprecatedになっている様子なので
<a href="https://www.jayway.com/2015/05/21/fixing-your-ios-build-scripts/">Fixing your iOS build scripts</a>を参考に</p>

<pre><code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/PackageApplication
</code></pre>

<p>上記ビルドスクリプト内の <code>@codesign_args</code> から <code>resource-rules</code> と <code>--resource-rules=$destApp/ResourceRules.plist</code> を削除してあげる。<br/>
参考先は<code>ResourceRules.plist</code> が存在している場合としていない場合とで分けるように修正してくれていました＞ω＜</p>

<pre><code>...
my @codesign_args;
    if (-e '$destApp/ResourceRules.plist') {  # If ResourceRules.plist exists, include it in codesign arguments, for backwards compatability
        @codesign_args = ("/usr/bin/codesign", "--force", "--preserve-metadata=identifier,entitlements,resource-rules",
                         "--sign", $opt{sign},
                         "--resource-rules=$destApp/ResourceRules.plist");
    } else { # If ResourceRules.plist isn't found, don't include it in the codesign arguments
        @codesign_args = ("/usr/bin/codesign", "--force", "--preserve-metadata=identifier,entitlements",
                         "--sign", $opt{sign});
    }
</code></pre>

<a name="ambiguous............"></a>
<h2>ambiguousなエラー</h2>

<pre><code>error: /usr/bin/codesign --force --preserve-metadata=identifier,entitlements --sign iPhone Distribution: [証明書] --entitlements /var/folders/_c/xblnly_j59n4vmbhq061q_g00000gp/T/W_1s7LZRB8/entitlements_plist3tPGS55p /var/folders/_c/xblnly_j59n4vmbhq061q_g00000gp/T/W_1s7LZRB8/Payload/MEME-Run-iOS.app failed with error 1. Output: iPhone Distribution: [証明書]: ambiguous (matches "iPhone Distribution: [証明書]" in /Users/[ユーザー名]/Library/Keychains/login.keychain-db and "iPhone Distribution: [証明書]" in /Library/Keychains/System.keychain)
</code></pre>

<p>これは通常証明書が２つ存在している場合等に表示されるエラー。使っている証明書と期限切れの証明書がまだキーチェーンの中に入っている場合は削除すれば問題ない。<br/>
Xcode8からはAuto Siging機能が追加されているので、<a href="http://dev.classmethod.jp/smartphone/xcode-8-signing/">What&rsquo;s New in Xcode App Signing</a>を参考に、プロビジョニング等の設定を全てAutoに変更し、Jenkins内のXcodeBuilder設定の証明書の記述も全て削除してしまえば問題なくビルドできるようになりました。</p>

<p>ふあーーーすっきり。
ちょっと対応が多すぎて実際必要だったのがどれやら…
とりあえず整理のためにめもめもしておきます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[絶賛更新中]iOS,OSX向けの新しい言語「swift」について]]></title>
    <link href="http://pgmy.github.io/blog/2014/06/16/swift/"/>
    <updated>2014-06-16T01:34:05+00:00</updated>
    <id>http://pgmy.github.io/blog/2014/06/16/swift</id>
    <content type="html"><![CDATA[<p>Appleから新しいiOS,OS X向け言語が発表されたみたいです・ω・</p>

<p><a href="https://developer.apple.com/swift/">Swift</a></p>

<p>なんて速そうなお名前。
さっそくiBook StoreにSwiftに関する電子書籍がアップされていたので読んでみました。</p>

<!-- more -->




<div class="pochireba" style="text-align:left;font-size:small;padding:20px 0;/zoom: 1;overflow: hidden;"><a href="https://itunes.apple.com/jp/book/swift-programming-language/id881256329?mt=11&uo=4&at=10l8vp" target="_blank" ><img src="http://a1.mzstatic.com/us/r30/Publication4/v4/a9/9d/d1/a99dd1d5-39b9-71ce-7500-2eb3e8d56990/cover.60x60-50.jpg" alt="The Swift Programming Language" width="60" height="60" style="float:left;margin:0 15px 0 0;width:60px;height:60px;" class="pochi_img" ></a><div class="pochi_info" style="text-align:left;/zoom: 1;overflow: hidden;"><div class="pochi_name"><a href="https://itunes.apple.com/jp/book/swift-programming-language/id881256329?mt=11&uo=4&at=10l8vp" target="_blank" >The Swift Programming Language</a></div><div class="pochi_price" style="display:inline;">無料</div><div class="pochi_time" style="font-size:x-small;display:inline;">(2014.06.03時点)</div>&nbsp;<a href="https://itunes.apple.com/jp/book/swift-programming-language/id881256329?mt=11&uo=4&at=10l8vp" style="width:60px;color:#ffffff;background:#000000;font-size:8px;font-weight:bold;text-align:center;display:inline;text-decoration:none;border:0px;padding:2px;border-radius:5px;white-space:nowrap;" target="_blank" >App Store</a><div class="pochi_seller"><a href="https://itunes.apple.com/jp/artist/apple-inc./id405307759?mt=11&uo=4&at=10l8vp" target="_blank" >Apple Inc.</a></div><div class="pochi_post" style="font-size:x-small;">posted with <a href="http://pochireba.com" rel="nofollow" target="_blank">ポチレバ</a></div></div><div class="pochireba-footer" style="clear: left"></div></div>


<p>第２段の書籍もアップされましたー！</p>

<div class="pochireba" style="text-align:left;font-size:small;padding:20px 0;/zoom: 1;overflow: hidden;"><a href="https://itunes.apple.com/jp/book/using-swift-cocoa-objective/id888894773?mt=11&uo=4&at=10l8vp" target="_blank" ><img src="http://a2.mzstatic.com/us/r30/Publication6/v4/4f/c3/c6/4fc3c655-d36a-9442-ca7d-1d798d5f19ef/using_swift_cover.60x60-50.jpg" alt="Using Swift with Cocoa and Objective-C" width="60" height="60" style="float:left;margin:0 15px 0 0;width:60px;height:60px;" class="pochi_img" ></a><div class="pochi_info" style="text-align:left;/zoom: 1;overflow: hidden;"><div class="pochi_name"><a href="https://itunes.apple.com/jp/book/using-swift-cocoa-objective/id888894773?mt=11&uo=4&at=10l8vp" target="_blank" >Using Swift with Cocoa and Objective-C</a></div><div class="pochi_price" style="display:inline;">無料</div><div class="pochi_time" style="font-size:x-small;display:inline;">(2014.06.16時点)</div>&nbsp;<a href="https://itunes.apple.com/jp/book/using-swift-cocoa-objective/id888894773?mt=11&uo=4&at=10l8vp" style="width:60px;color:#ffffff;background:#000000;font-size:8px;font-weight:bold;text-align:center;display:inline;text-decoration:none;border:0px;padding:2px;border-radius:5px;white-space:nowrap;" target="_blank" >App Store</a><div class="pochi_seller"><a href="https://itunes.apple.com/jp/artist/apple-inc./id405307759?mt=11&uo=4&at=10l8vp" target="_blank" >Apple Inc.</a></div><div class="pochi_post" style="font-size:x-small;">posted with <a href="http://pochireba.com" rel="nofollow" target="_blank">ポチレバ</a></div></div><div class="pochireba-footer" style="clear: left"></div></div>


<p>※合間にまとめてるためまったり更新です＞＜</p>

<a name="L..............."></a>
<h2>変数と定数</h2>

<p>定数は<code>let</code>で宣言、変数は<code>var</code>で宣言します。</p>

<pre><code>let maxNum = 50
var number = 0
</code></pre>

<p>上記で、<code>maxNum</code>という<code>50</code>が入った定数が宣言。<br/>
<code>number</code>という変数を<code>0</code>で初期化という形になります。</p>

<p>なるほど。<br/>
<code>let</code>で宣言した場合は定数という扱いなので、内容が変更される予定がなければ基本的には<code>let</code>で宣言するのが望ましいです。</p>

<a name="L........."></a>
<h3>型推論</h3>

<p>Swiftには型推論という機能があるようで、代入する値によって型を推論してくれるようです。</p>

<pre><code>let number = 4
let name = 'PGMY'
var data = 5.4
</code></pre>

<p>これで、<br/>
<code>number</code>は<code>Integer</code>型の定数<br/>
<code>name</code>は<code>String</code>型の定数<br/>
<code>data</code>は<code>Double</code>型の変数<br/>
という感じの宣言になります。</p>

<p>コンマで区切れば複数宣言も可能です。</p>

<pre><code>var x = 0.0, y = 0.0, z = 0.0
</code></pre>

<a name="L........."></a>
<h3>型指定</h3>

<p>もちろん型を指定して宣言することもできます。</p>

<pre><code>var message: String
</code></pre>

<p>この<code>:</code>は<code>…の型は…</code>といった感じの意味になっていて、<code>:</code>の後ろに指定したい型を書きます。<br/>
宣言時に型を指定した時はその他の型を入れることはできません。
<code>
message = 'MESSAGE'
</code></p>

<p>基本的には型指定を使わなくても、宣言時に型推論を頼って初期値を入れてしまえば、問題ありません。</p>

<a name="L................................................"></a>
<h3>定数・変数の名前に利用できるもの</h3>

<p>Unicode文字に含まれている文字であればどんなものでも宣言として使えます。</p>

<pre><code>let π = 3.14159
let あいさつ = "こんにちは！"
</code></pre>

<p>iPhoneで利用されている絵文字なんてのも定数・変数として利用でちゃいます（このブログではちょっと表示できませんが）。</p>

<a name="L........................"></a>
<h2>定数・変数の出力</h2>

<p>出力については<code>println</code>関数を使うことで文字列を簡単に出力できます。
Xcodeであればコンソール出力部分に出力されます。</p>

<pre><code>println("This is a string")
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prefectly For iOS]]></title>
    <link href="http://pgmy.github.io/blog/2014/06/06/prefectlyforios/"/>
    <updated>2014-06-06T09:03:16+00:00</updated>
    <id>http://pgmy.github.io/blog/2014/06/06/prefectlyforios</id>
    <content type="html"><![CDATA[<p>いつも利用させていただいている、素敵な日本地図フォント<a href="http://deform.jp/prefectly/">Prefectly</a>をiOSで表示したくて作ってみました。</p>

<div class="github-widget" data-repo="PGMY/MPrefectlyMap"></div>


<p>まだ表示させてるだけなので使いやすくしていかないとなぁ・・・！</p>
]]></content>
  </entry>
  
</feed>
